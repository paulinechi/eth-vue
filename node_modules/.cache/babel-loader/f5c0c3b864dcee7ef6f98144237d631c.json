{"remainingRequest":"/home/ubuntu/eth-vue/node_modules/thread-loader/dist/cjs.js!/home/ubuntu/eth-vue/node_modules/babel-loader/lib/index.js!/home/ubuntu/eth-vue/src/js/utilities.js","dependencies":[{"path":"/home/ubuntu/eth-vue/src/js/utilities.js","mtime":1640695749875},{"path":"/home/ubuntu/eth-vue/babel.config.js","mtime":1640695749839},{"path":"/home/ubuntu/eth-vue/node_modules/cache-loader/dist/cjs.js","mtime":1640501305467},{"path":"/home/ubuntu/eth-vue/node_modules/thread-loader/dist/cjs.js","mtime":1640501305479},{"path":"/home/ubuntu/eth-vue/node_modules/babel-loader/lib/index.js","mtime":1640788501629}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ubuntu/eth-vue/src/js/utilities.js"],"names":["chunkArray","ethereumBlockies","avatarCanvasElement","IDENTICON_COLORS","soliditySha3","getObjectFromResponse","state","result","entitiesCount","keys","fieldTypes","dataObject","itemValue","intValues","stringValues","entitiesStrings","split","splice","length","entitiesStringsArrays","map","entityStrings","intResultCountPerEntity","entitiesIntsArrays","i","intValuesIndex","stringValuesIndex","entityObject","reduce","hash","key","index","toNumber","includes","getHexFromString","toString","web3","instance","toUtf8","slice","push","getSlicedAddressString","addressString","getLeftPaddedNumber","numberValue","dataTypeIndex","hexNumber","rightNumber","paddings","numberOfDigits","paddingSize","paddedNumber","getSoliditySha3ForId","otherParams","join","getHash","stringValue","characterCode","charCodeAt","getGravatarFor","payload","Promise","resolve","reject","email","trim","getGravatarFromEmail","getGravatarFromCoinbase","then","avatarCanvas","gravatar","colorPosition","Math","abs","coinbase","identiconColor","create","seed","color","bgcolor","bgColor","size","scale","spotcolor","spotColor","str","web3Instance","toHex","window","utils"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport { chunkArray } from \"../util/ArrayManager\";\nimport ethereumBlockies from \"ethereum-blockies\";\nimport { avatarCanvasElement } from \"../util/DOMManipulator\";\nimport { IDENTICON_COLORS } from \"../util/constants\";\nimport soliditySha3 from \"solidity-sha3\";\n\nexport function getObjectFromResponse(\n  state,\n  result,\n  entitiesCount,\n  keys,\n  fieldTypes\n) {\n  // types: 1 => boolean, 2 => uint8, 3 => uint, 4 => address, 5 => bytes32, 7 => string\n  const dataObject = [];\n  let itemValue;\n  const intValues = result[0];\n  const stringValues = result[1];\n  const entitiesStrings = stringValues\n    .split(\"666--ETH-VUE-LIST--666\")\n    .splice(0, stringValues.split(\"666--ETH-VUE-LIST--666\").length - 1);\n  const entitiesStringsArrays = entitiesStrings.map(entityStrings =>\n    entityStrings\n      .split(\"666--ETH-VUE--666\")\n      .splice(0, entityStrings.split(\"666--ETH-VUE--666\").length - 1)\n  );\n  const intResultCountPerEntity = result[0].length / entitiesCount;\n  const entitiesIntsArrays = chunkArray(intValues, intResultCountPerEntity);\n\n  for (let i = 0; i < entitiesCount; i++) {\n    let intValuesIndex = 0;\n    let stringValuesIndex = 0;\n    const entityObject = keys.reduce((hash, key, index) => {\n      if (fieldTypes[index] === 1) {\n        itemValue = entitiesIntsArrays[i]\n          ? entitiesIntsArrays[i][intValuesIndex].toNumber()\n          : 0;\n        itemValue = !(itemValue === 0);\n        intValuesIndex += 1;\n      } else if ([2, 3].includes(fieldTypes[index])) {\n        itemValue = entitiesIntsArrays[i]\n          ? entitiesIntsArrays[i][intValuesIndex].toNumber()\n          : 0;\n        intValuesIndex += 1;\n      } else if (fieldTypes[index] === 4) {\n        itemValue = entitiesIntsArrays[i]\n          ? getHexFromString(\n              state,\n              entitiesIntsArrays[i][intValuesIndex].toString()\n            )\n          : \"0x0\";\n        intValuesIndex += 1;\n      } else if (fieldTypes[index] === 5) {\n        itemValue = entitiesIntsArrays[i]\n          ? state.web3\n              .instance()\n              .toUtf8(\n                getHexFromString(\n                  state,\n                  entitiesIntsArrays[i][intValuesIndex].toString()\n                )\n              )\n              .slice(1)\n          : \"\";\n        intValuesIndex += 1;\n      } else {\n        itemValue = entitiesStringsArrays[i]\n          ? entitiesStringsArrays[i][stringValuesIndex].slice(2)\n          : \"\";\n        stringValuesIndex += 1;\n      }\n\n      hash[key] = itemValue;\n      return hash;\n    }, {});\n\n    dataObject.push(entityObject);\n  }\n\n  return dataObject;\n}\n\nexport function getSlicedAddressString(state, addressString) {\n  return getHexFromString(state, addressString).slice(2);\n}\n\nexport function getLeftPaddedNumber(state, numberValue, dataTypeIndex = 1) {\n  const hexNumber = getHexFromString(state, numberValue);\n  const rightNumber = getSlicedAddressString(state, hexNumber);\n  const paddings = [2, 64]; // 2 => uint8, 64 => uint256\n  const numberOfDigits = rightNumber.toString().length;\n  const paddingSize = paddings[dataTypeIndex] - numberOfDigits;\n  let paddedNumber = \"0x\";\n  for (let i = 0; i < paddingSize; i++) {\n    paddedNumber += \"0\";\n  }\n\n  paddedNumber += rightNumber.toString();\n  paddedNumber = paddedNumber.slice(0, 2 + paddings[dataTypeIndex]);\n  return paddedNumber;\n}\n\nexport function getSoliditySha3ForId(state, key, ...otherParams) {\n  return soliditySha3(`${getHexFromString(state, key)}${otherParams.join(\"\")}`);\n}\n\nexport function getHash(stringValue = \"\") {\n  let hash = 0;\n  let characterCode;\n\n  if (stringValue.length === 0) return hash;\n\n  for (let i = 0; i < stringValue.length; i++) {\n    characterCode = stringValue.charCodeAt(i);\n    hash = (hash << 5) - hash + characterCode;\n    hash |= 0; // Convert to 32-bit integer\n  }\n\n  return hash;\n}\n\nexport function getGravatarFor(payload = {}) {\n  return new Promise(function(resolve, reject) {\n    if (payload.email && payload.email.trim() !== \"\") {\n      getGravatarFromEmail(payload, resolve, reject);\n    } else {\n      getGravatarFromCoinbase(payload, resolve, reject);\n    }\n  });\n}\n\n/* eslint-disable no-unused-vars */\nexport function getGravatarFromEmail(payload = {}, resolve, reject) {\n  avatarCanvasElement(payload.email).then((avatarCanvas, gravatar) => {\n    resolve(avatarCanvas);\n  });\n}\n\n/* eslint-disable no-unused-vars */\nexport function getGravatarFromCoinbase(payload = {}, resolve, reject) {\n  const colorPosition = Math.abs(\n    getHash(payload.coinbase) % IDENTICON_COLORS.length\n  );\n  const identiconColor = IDENTICON_COLORS[colorPosition];\n  const avatarCanvas = ethereumBlockies.create({\n    seed: payload.coinbase.toString(),\n    color: identiconColor.color,\n    bgcolor: identiconColor.bgColor,\n    size: 8,\n    scale: 13,\n    spotcolor: identiconColor.spotColor\n  });\n  resolve(avatarCanvas);\n}\n\nexport function getHexFromString(state, str) {\n  const web3Instance = state.web3.instance;\n  if (web3Instance && web3Instance() && web3Instance().toHex)\n    return web3Instance().toHex(str);\n  else if (\n    window &&\n    window.web3 &&\n    window.web3.utils &&\n    window.web3.utils.toHex\n  )\n    return window.web3.utils.toHex(str);\n  else return \"0x0\";\n}\n"]}]}