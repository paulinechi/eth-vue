{"remainingRequest":"/home/ubuntu/eth-vue/node_modules/thread-loader/dist/cjs.js!/home/ubuntu/eth-vue/node_modules/babel-loader/lib/index.js!/home/ubuntu/eth-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ubuntu/eth-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/eth-vue/src/components/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu/eth-vue/src/components/App.vue","mtime":1640695749875},{"path":"/home/ubuntu/eth-vue/babel.config.js","mtime":1640695749839},{"path":"/home/ubuntu/eth-vue/node_modules/cache-loader/dist/cjs.js","mtime":1640501305467},{"path":"/home/ubuntu/eth-vue/node_modules/thread-loader/dist/cjs.js","mtime":1640501305479},{"path":"/home/ubuntu/eth-vue/node_modules/babel-loader/lib/index.js","mtime":1640788501629},{"path":"/home/ubuntu/eth-vue/node_modules/cache-loader/dist/cjs.js","mtime":1640501305467},{"path":"/home/ubuntu/eth-vue/node_modules/vue-loader/lib/index.js","mtime":1640788505663}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n    <router-view\n      :is-d-app-ready=\"isDAppReady\"\n      :current-view=\"currentView\"\n      :is-valid-user-but=\"isValidUserBut\"\n      @log-user-in=\"logUserIn\"\n      @log-user-out=\"logUserOut\"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"App\",\n  computed: {\n    ...mapState({\n      hasInjectedWeb3: state => state.web3.isInjected,\n      hasWeb3InjectedBrowser: state => state.user.hasWeb3InjectedBrowser,\n      isConnectedToApprovedNetwork: state =>\n        state.user.isConnectedToApprovedNetwork,\n      hasCoinbase: state => state.user.hasCoinbase,\n      networkId: state => state.web3.networkId,\n      coinbase: state => state.web3.coinbase,\n      currentRoute: state => state.currentRoute,\n      currentView: state => state.currentView,\n      user: state => state.user,\n      isDAppReady: state => state.isDAppReady,\n      isValidUserBut: state => state.isValidUserBut,\n      originalIsValidUserBut: state => state.originalIsValidUserBut,\n      gravatarURL: state => state.gravatarURL,\n      avatarCanvas: state => state.avatarCanvas,\n      defaultRoute: state => state.defaultRoute\n    })\n  },\n  data: function() {\n    return {\n      managers: { UserManager }\n    };\n  },\n  watch: {\n    hasInjectedWeb3(web3ConnectionValue) {\n      console.log(\"App:::hasInjectedWeb3: \", web3ConnectionValue);\n    },\n    networkId(networkId) {\n      console.log(\"App:::networkId: \", networkId);\n    },\n    coinbase(coinbase) {\n      console.log(\"App:::coinbase: \", coinbase);\n    },\n    isDAppReady(isDAppReady) {\n      console.log(\"App:::isDAppReady: \", isDAppReady);\n      this.callSetIsValidUserBut(\n        this.$route.query.isValidUserBut || this.forcedIsValidUserBut\n      );\n    },\n    $route(newRoute) {\n      this[ACTION_TYPES.CHANGE_CURRENT_ROUTE_TO](newRoute);\n      this[ACTION_TYPES.SET_CURRENT_VIEW](newRoute);\n      const isValidUserBut = this.$route.query.isValidUserBut;\n      if (isValidUserBut) {\n        this.callSetIsValidUserBut(isValidUserBut);\n      } else {\n        this.callResetIsValidUserBut();\n      }\n    }\n  },\n  beforeCreate: function() {\n    this.$store\n      .dispatch(ACTION_TYPES.REGISTER_WEB3_INSTANCE)\n      .then(result => {\n        let state = result.state;\n        monitorWeb3(state);\n        this.$store\n          .dispatch(ACTION_TYPES.UPDATE_USER_BLOCKCHAIN_STATUS)\n          .then(() => {\n            if (!this.isDAppReady) {\n              this.forcedIsValidUserBut = \"0\";\n              this.$store.dispatch(ACTION_TYPES.UPDATE_DAPP_READINESS, true);\n            }\n          })\n          .catch(() => {\n            console.log(\"App:::Unable to UPDATE_USER_BLOCKCHAIN_STATUS\");\n            if (!this.isDAppReady) {\n              this.$store.dispatch(ACTION_TYPES.UPDATE_DAPP_READINESS, true);\n            }\n          });\n      })\n      .catch((result = {}) => {\n        let state = result.state;\n        this.forcedIsValidUserBut = \"0\";\n        monitorWeb3(state);\n        if (!this.isDAppReady) {\n          this.$store.dispatch(ACTION_TYPES.UPDATE_DAPP_READINESS, true);\n        }\n\n        console.error(result, \"App:::Unable to REGISTER_WEB3_INSTANCE\");\n      });\n  },\n  created: function() {\n    this[ACTION_TYPES.CHANGE_CURRENT_ROUTE_TO](this.$route);\n    this[ACTION_TYPES.SET_CURRENT_VIEW](this.$route);\n  },\n  methods: {\n    ...mapActions([\n      ACTION_TYPES.CHANGE_CURRENT_ROUTE_TO,\n      ACTION_TYPES.UPDATE_USER_GRAVATAR,\n      ACTION_TYPES.SET_IS_VALID_USER_BUT,\n      ACTION_TYPES.RESET_IS_VALID_USER_BUT,\n      ACTION_TYPES.SET_CURRENT_VIEW,\n      ACTION_TYPES.LOGIN\n    ]),\n    callUpdateUserGravatar(payload = null) {\n      this[ACTION_TYPES.UPDATE_USER_GRAVATAR](payload);\n    },\n    callToWriteUser(payload = null) {\n      const actionParams = Object.assign({}, payload.requestParams, {\n        methodName: payload.methodName,\n        contractIndexToUse: payload.contractIndexToUse\n      });\n      this.managers[payload.managerIndex || \"UserManager\"]\n        .accessBlockchain(this.$store.state, actionParams)\n        .then(userData => {\n          this[ACTION_TYPES.LOGIN]({\n            userObject: payload.vueObject\n          })\n            .then(() => {\n              if (payload.callback) payload.callback(userData);\n            })\n            .catch(error => {\n              console.error(\"App:::Unable to perform login action: \" + error);\n            });\n        })\n        .catch(error => {\n          if (payload.callback) payload.callback(false);\n          console.error(\"App:::Unable to write user data: \" + error);\n        });\n    },\n    callSetIsValidUserBut(newValue) {\n      this[ACTION_TYPES.SET_IS_VALID_USER_BUT](newValue);\n    },\n    callResetIsValidUserBut() {\n      this[ACTION_TYPES.RESET_IS_VALID_USER_BUT]();\n    },\n    callToAccessBlockchain(payload = null) {\n      const actionParams = Object.assign({}, payload.requestParams, {\n        methodName: payload.methodName,\n        contractIndexToUse: payload.contractIndexToUse\n      });\n      const value = payload.value;\n      this.managers[payload.managerIndex || \"UserManager\"]\n        .accessBlockchain(this.$store.state, actionParams, value)\n        .then(responseObject => {\n          if (payload.callback) payload.callback(responseObject);\n        })\n        .catch(err => {\n          if (payload.callback) payload.callback(false);\n          console.error(\n            err,\n            `App:::Unable to ${payload.methodName}. You may not need to pay any attention to this error. A page load on Sign Up may throw this error, but everything is fine.`\n          );\n        });\n    },\n    logUserIn(evt = null) {\n      if (!this.user.isLoggedIn) {\n        this.$root.callToAccessBlockchain({\n          requestParams: {},\n          contractIndexToUse: \"UserAuthManager\",\n          methodName: \"login\",\n          managerIndex: \"UserManager\",\n          callback: (isUserExists = false) => {\n            if (evt) evt.target.disabled = false;\n            if (isUserExists) {\n              UserManager.promisifyUserData(this.$store.state)\n                .then(userObject => {\n                  this.$store\n                    .dispatch(ACTION_TYPES.LOGIN, {\n                      userObject\n                    })\n                    .then(() => {\n                      console.log(\n                        \"App:::LOGIN Successful\",\n                        this.user.isLoggedIn\n                      );\n                      if (this.user.isLoggedIn) this.$router.push(\"/dashboard\");\n                      else this.$router.push(\"/home\");\n                    })\n                    .catch(() => {\n                      console.log(\"App:::Unable to LOGIN\");\n                      if (!this.isDAppReady) {\n                        this.$store.dispatch(\n                          ACTION_TYPES.UPDATE_DAPP_READINESS,\n                          true\n                        );\n                      }\n                    });\n                })\n                .catch((result = {}) => {\n                  console.error(result, \"App:::Unable to fetch User Data\");\n                  if (result.isValid) {\n                    this.$store\n                      .dispatch(\n                        ACTION_TYPES.INITIALISE_IS_VALID_USER_BUT,\n                        result.warningMessage\n                      )\n                      .then(() => {\n                        if (!this.isDAppReady) {\n                          this.$store.dispatch(\n                            ACTION_TYPES.UPDATE_DAPP_READINESS,\n                            true\n                          );\n                        }\n                      })\n                      .catch(() => {\n                        console.log(\n                          \"App:::Unable to INITIALISE_IS_VALID_USER_BUT\"\n                        );\n                        if (!this.isDAppReady) {\n                          this.$store.dispatch(\n                            ACTION_TYPES.UPDATE_DAPP_READINESS,\n                            true\n                          );\n                        }\n                      });\n                  } else {\n                    if (!this.isDAppReady) {\n                      this.$store.dispatch(\n                        ACTION_TYPES.UPDATE_DAPP_READINESS,\n                        true\n                      );\n                    }\n                  }\n                });\n            } else {\n              this.$router.push(\"/\");\n            }\n          }\n        });\n      } else {\n        if (evt) evt.target.disabled = false;\n      }\n    },\n    logUserOut(evt = null) {\n      this.$store.dispatch(ACTION_TYPES.LOGOUT).then(() => {\n        if (evt) evt.target.disabled = false;\n        this.$router.push(\"/\");\n      });\n    }\n  }\n};\n\nimport { mapState, mapActions } from \"vuex\";\nimport { ACTION_TYPES } from \"../util/constants\";\nimport UserManager from \"../js/UserManager\";\nimport monitorWeb3 from \"../util/web3/monitorWeb3\";\n</script>\n\n<style>\nhtml {\n  background: #eef0ef;\n}\n\nbody {\n  margin: 0;\n  width: 100%;\n}\n\n* {\n  box-sizing: border-box;\n}\n\ntextarea {\n  resize: none;\n}\n\n#app {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  width: 100%;\n  /*max-width: 960px;*/\n  min-width: 1020px;\n  margin: auto;\n}\n</style>\n"],"sourceRoot":"src/components"}]}