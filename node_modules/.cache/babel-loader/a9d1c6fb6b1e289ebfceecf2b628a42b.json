{"remainingRequest":"/home/ubuntu/eth-vue/node_modules/thread-loader/dist/cjs.js!/home/ubuntu/eth-vue/node_modules/babel-loader/lib/index.js!/home/ubuntu/eth-vue/src/util/web3/monitorWeb3.js","dependencies":[{"path":"/home/ubuntu/eth-vue/src/util/web3/monitorWeb3.js","mtime":1640695749883},{"path":"/home/ubuntu/eth-vue/babel.config.js","mtime":1640695749839},{"path":"/home/ubuntu/eth-vue/node_modules/cache-loader/dist/cjs.js","mtime":1640501305467},{"path":"/home/ubuntu/eth-vue/node_modules/thread-loader/dist/cjs.js","mtime":1640501305479},{"path":"/home/ubuntu/eth-vue/node_modules/babel-loader/lib/index.js","mtime":1640788501629}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwppbXBvcnQgV2ViMyBmcm9tICJ3ZWIzIjsKaW1wb3J0IHN0b3JlIGZyb20gIi4uLy4uL3N0b3JlLyI7CmltcG9ydCB7IEFDVElPTl9UWVBFUywgQVBQUk9WRURfTkVUV09SS19JRCB9IGZyb20gIi4uLy4uL3V0aWwvY29uc3RhbnRzLmpzIjsKCnZhciBtb25pdG9yV2ViMyA9IGZ1bmN0aW9uIG1vbml0b3JXZWIzKHN0YXRlKSB7CiAgdmFyIG5ldHdvcmtJZCA9IHN0YXRlICYmIHN0YXRlLndlYjMgPyBzdGF0ZS53ZWIzLm5ldHdvcmtJZCA6ICIiOwogIHZhciBjb2luYmFzZSA9IHN0YXRlICYmIHN0YXRlLndlYjMgPyBzdGF0ZS53ZWIzLmNvaW5iYXNlIDogIiI7CiAgdmFyIHdlYjMgPSB3aW5kb3cud2ViMzsKICB2YXIgaXNMb2NhbFdlYjMgPSBmYWxzZTsgLy8gQ2hlY2tpbmcgaWYgYnJvd3NlciBpcyBXZWIzLWluamVjdGVkIChNaXN0L01ldGFNYXNrKQoKICBpZiAodHlwZW9mIHdlYjMgIT09ICJ1bmRlZmluZWQiICYmIHdlYjMpIHsKICAgIC8vIFVzZSBNaXN0L01ldGFNYXNrJ3MgcHJvdmlkZXIKICAgIHdlYjMgPSBuZXcgV2ViMyh3aW5kb3cuZXRoZXJldW0pOwogICAgd2luZG93LmV0aGVyZXVtLmVuYWJsZSgpOwogIH0gZWxzZSB7CiAgICBjb25zb2xlLmxvZygibW9uaXRvcldlYjM6IE5vIHdlYjMgaW4gYnJvd3NlciIpOwogICAgd2ViMyA9IG5ldyBXZWIzKG5ldyBXZWIzLnByb3ZpZGVycy5IdHRwUHJvdmlkZXIoImh0dHA6Ly9sb2NhbGhvc3Q6ODU0NSIpKTsKICAgIGlzTG9jYWxXZWIzID0gdHJ1ZTsKICB9CgogIGlmICh3ZWIzKSB7CiAgICAvKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqLwogICAgd2ViMy5ldGguc3Vic2NyaWJlKCJuZXdCbG9ja0hlYWRlcnMiLCBmdW5jdGlvbiAoZXJyb3IsIHJlc3VsdCkgewogICAgICBpZiAoIWVycm9yKSB7Ly8gY29uc29sZS5sb2cocmVzdWx0KTsKICAgICAgfQogICAgfSk7CiAgfQoKICBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICBpZiAod2ViMyAmJiAhaXNMb2NhbFdlYjMpIHsKICAgICAgd2ViMy5ldGgubmV0LmdldElkKGZ1bmN0aW9uIChlcnIsIG5ld05ldHdvcmtJZCkgewogICAgICAgIG5ld05ldHdvcmtJZCA9ICFlcnIgJiYgbmV3TmV0d29ya0lkID8gbmV3TmV0d29ya0lkLnRvU3RyaW5nKCkgOiAiIjsKCiAgICAgICAgaWYgKCFlcnIgJiYgbmV3TmV0d29ya0lkICYmIG5ld05ldHdvcmtJZCAhPT0gIiIgJiYgbmV3TmV0d29ya0lkICE9PSBuZXR3b3JrSWQgfHwgIW5ld05ldHdvcmtJZCAmJiBuZXR3b3JrSWQpIHsKICAgICAgICAgIHN0b3JlLmRpc3BhdGNoKEFDVElPTl9UWVBFUy5MT0dPVVQpOwogICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB3ZWIzLmV0aC5nZXRDb2luYmFzZShmdW5jdGlvbiAoZXJyLCBuZXdDb2luYmFzZSkgewogICAgICAgICAgICBuZXdDb2luYmFzZSA9ICFlcnIgJiYgbmV3Q29pbmJhc2UgPyBuZXdDb2luYmFzZS50b1N0cmluZygpIDogIiI7CiAgICAgICAgICAgIHZhciBhcHByb3ZlZE5ldHdvcmtJZCA9IEFQUFJPVkVEX05FVFdPUktfSUQgfHwgbmV3TmV0d29ya0lkOwoKICAgICAgICAgICAgaWYgKCFlcnIgJiYgbmV3Q29pbmJhc2UgJiYgbmV3Q29pbmJhc2UgIT09ICIiICYmIG5ld0NvaW5iYXNlICE9PSBjb2luYmFzZSAmJiBhcHByb3ZlZE5ldHdvcmtJZCAmJiBuZXdOZXR3b3JrSWQgPT09IGFwcHJvdmVkTmV0d29ya0lkIHx8ICFuZXdDb2luYmFzZSAmJiBjb2luYmFzZSkgewogICAgICAgICAgICAgIHN0b3JlLmRpc3BhdGNoKEFDVElPTl9UWVBFUy5MT0dPVVQpOwogICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTsKICAgICAgICAgICAgfSBlbHNlIGlmICghZXJyICYmIG5ld0NvaW5iYXNlICYmIG5ld0NvaW5iYXNlICE9PSAiIiAmJiBuZXdDb2luYmFzZSAhPT0gY29pbmJhc2UpIHsKICAgICAgICAgICAgICBjb2luYmFzZSA9IG5ld0NvaW5iYXNlOwogICAgICAgICAgICAgIHN0b3JlLmRpc3BhdGNoKEFDVElPTl9UWVBFUy5VUERBVEVfV0VCM19QUk9QRVJUSUVTLCB7CiAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOiBbImNvaW5iYXNlIl0sCiAgICAgICAgICAgICAgICB2YWx1ZXM6IFtuZXdDb2luYmFzZV0KICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9LCA2NjYpOwp9OwoKZXhwb3J0IGRlZmF1bHQgbW9uaXRvcldlYjM7"},{"version":3,"sources":["/home/ubuntu/eth-vue/src/util/web3/monitorWeb3.js"],"names":["Web3","store","ACTION_TYPES","APPROVED_NETWORK_ID","monitorWeb3","state","networkId","web3","coinbase","window","isLocalWeb3","ethereum","enable","console","log","providers","HttpProvider","eth","subscribe","error","result","setInterval","net","getId","err","newNetworkId","toString","dispatch","LOGOUT","location","reload","getCoinbase","newCoinbase","approvedNetworkId","UPDATE_WEB3_PROPERTIES","properties","values"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport Web3 from \"web3\";\nimport store from \"../../store/\";\nimport { ACTION_TYPES, APPROVED_NETWORK_ID } from \"../../util/constants.js\";\n\nconst monitorWeb3 = function(state) {\n  let networkId = state && state.web3 ? state.web3.networkId : \"\";\n  let coinbase = state && state.web3 ? state.web3.coinbase : \"\";\n  let web3 = window.web3;\n  let isLocalWeb3 = false;\n\n  // Checking if browser is Web3-injected (Mist/MetaMask)\n  if (typeof web3 !== \"undefined\" && web3) {\n    // Use Mist/MetaMask's provider\n    web3 = new Web3(window.ethereum);\n    window.ethereum.enable();\n  } else {\n    console.log(\"monitorWeb3: No web3 in browser\");\n    web3 = new Web3(new Web3.providers.HttpProvider(\"http://localhost:8545\"));\n    isLocalWeb3 = true;\n  }\n\n  if (web3) {\n    /* eslint-disable no-unused-vars */\n    web3.eth.subscribe(\"newBlockHeaders\", function(error, result) {\n      if (!error) {\n        // console.log(result);\n      }\n    });\n  }\n\n  setInterval(() => {\n    if (web3 && !isLocalWeb3) {\n      web3.eth.net.getId((err, newNetworkId) => {\n        newNetworkId = !err && newNetworkId ? newNetworkId.toString() : \"\";\n        if (\n          (!err &&\n            newNetworkId &&\n            newNetworkId !== \"\" &&\n            newNetworkId !== networkId) ||\n          (!newNetworkId && networkId)\n        ) {\n          store.dispatch(ACTION_TYPES.LOGOUT);\n          window.location.reload();\n        } else {\n          web3.eth.getCoinbase((err, newCoinbase) => {\n            newCoinbase = !err && newCoinbase ? newCoinbase.toString() : \"\";\n            const approvedNetworkId = APPROVED_NETWORK_ID || newNetworkId;\n            if (\n              (!err &&\n                newCoinbase &&\n                newCoinbase !== \"\" &&\n                newCoinbase !== coinbase &&\n                approvedNetworkId &&\n                newNetworkId === approvedNetworkId) ||\n              (!newCoinbase && coinbase)\n            ) {\n              store.dispatch(ACTION_TYPES.LOGOUT);\n              window.location.reload();\n            } else if (\n              !err &&\n              newCoinbase &&\n              newCoinbase !== \"\" &&\n              newCoinbase !== coinbase\n            ) {\n              coinbase = newCoinbase;\n              store.dispatch(ACTION_TYPES.UPDATE_WEB3_PROPERTIES, {\n                properties: [\"coinbase\"],\n                values: [newCoinbase]\n              });\n            }\n          });\n        }\n      });\n    }\n  }, 666);\n};\n\nexport default monitorWeb3;\n"]}]}