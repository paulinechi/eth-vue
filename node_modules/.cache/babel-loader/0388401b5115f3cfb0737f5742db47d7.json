{"remainingRequest":"/home/ubuntu/eth-vue/node_modules/thread-loader/dist/cjs.js!/home/ubuntu/eth-vue/node_modules/babel-loader/lib/index.js!/home/ubuntu/eth-vue/src/store/mutations.js","dependencies":[{"path":"/home/ubuntu/eth-vue/src/store/mutations.js","mtime":1640695749879},{"path":"/home/ubuntu/eth-vue/babel.config.js","mtime":1640695749839},{"path":"/home/ubuntu/eth-vue/node_modules/cache-loader/dist/cjs.js","mtime":1640501305467},{"path":"/home/ubuntu/eth-vue/node_modules/thread-loader/dist/cjs.js","mtime":1640501305479},{"path":"/home/ubuntu/eth-vue/node_modules/babel-loader/lib/index.js","mtime":1640788501629}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ubuntu/eth-vue/src/store/mutations.js"],"names":["ethereumBlockies","avatarCanvasElement","MUTATION_TYPES","APPROVED_NETWORK_ID","IDENTICON_COLORS","NETWORKS","resetUser","state","web3Status","user","balance","coinbase","email","firstName","gravatar","hasCoinbase","hasWeb3InjectedBrowser","isConnectedToApprovedNetwork","isLoggedIn","lastName","userCopy","Object","assign","getHash","stringValue","hash","characterCode","length","i","charCodeAt","assignPropertyTo","hashObject","key","value","getUserBalance","Promise","resolve","reject","web3","instance","eth","getBalance","err","res","utils","fromWei","console","error","updateUserGravatar","payload","trim","setGravatarFromEmail","prepareGravatarFromCoinbase","then","avatarCanvas","callback","colorPosition","Math","abs","identiconColor","create","seed","color","bgcolor","bgColor","size","scale","spotcolor","spotColor","REGISTER_WEB3_INSTANCE","result","web3Copy","address","toString","networkId","web3Error","isInjected","hasInjectedWeb3","UPDATE_USER_BLOCKCHAIN_STATUS","approvedNetworkId","warningMessage","status","UPDATE_WEB3_PROPERTIES","properties","values","SET_CURRENT_VIEW","newRoute","currentView","meta","view","UPDATE_USER_GRAVATAR","UPDATE_DAPP_READINESS","isReady","isDAppReady","INITIALISE_IS_VALID_USER_BUT","isValidUserBut","originalIsValidUserBut","SET_IS_VALID_USER_BUT","newValue","RESET_IS_VALID_USER_BUT","LOGIN","userObject","isValid","LOGOUT","CHANGE_CURRENT_ROUTE_TO","currentRoute"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport ethereumBlockies from \"ethereum-blockies\";\nimport { avatarCanvasElement } from \"../util/DOMManipulator\";\nimport {\n  MUTATION_TYPES,\n  APPROVED_NETWORK_ID,\n  IDENTICON_COLORS,\n  NETWORKS\n} from \"../util/constants\";\n\nfunction resetUser(state, web3Status = {}) {\n  const user = {\n    balance: \"0.00\",\n    coinbase: \"\",\n    email: \"\",\n    firstName: \"\",\n    gravatar: \"\",\n    hasCoinbase: false,\n    hasWeb3InjectedBrowser: false,\n    isConnectedToApprovedNetwork: false,\n    isLoggedIn: false,\n    lastName: \"\"\n  };\n\n  const userCopy = state.user;\n  Object.assign(userCopy, user, web3Status);\n  state.user = userCopy;\n}\n\nfunction getHash(stringValue) {\n  let hash = 0;\n  let characterCode;\n\n  if (stringValue) {\n    if (stringValue.length === 0) return hash;\n\n    for (let i = 0; i < stringValue.length; i++) {\n      characterCode = stringValue.charCodeAt(i);\n      hash = (hash << 5) - hash + characterCode;\n      hash |= 0; // Convert to 32-bit integer\n    }\n  }\n\n  return hash;\n}\n\nfunction assignPropertyTo(hashObject, key, value) {\n  Object.assign(hashObject, {\n    [key]: value\n  });\n}\n\n/* eslint-disable no-unused-vars */\nfunction getUserBalance(state, userCopy) {\n  return new Promise(function(resolve, reject) {\n    state.web3.instance().eth.getBalance(state.user.coinbase, (err, res) => {\n      if (!err) {\n        resolve(state.web3.instance().utils.fromWei(res, \"ether\"));\n      } else {\n        console.error(err);\n      }\n    });\n  });\n}\n\nfunction updateUserGravatar(state, userCopy, payload = null) {\n  if (payload.email && payload.email.trim() !== \"\") {\n    setGravatarFromEmail(state, userCopy, payload);\n  } else {\n    prepareGravatarFromCoinbase(state, userCopy, payload);\n  }\n}\n\nfunction setGravatarFromEmail(state, userCopy, payload = null) {\n  avatarCanvasElement(payload.email).then((avatarCanvas, gravatar) => {\n    assignPropertyTo(userCopy, \"gravatar\", gravatar);\n    assignPropertyTo(userCopy, \"avatarCanvas\", avatarCanvas);\n    state.user = userCopy;\n    if (payload.callback) payload.callback(avatarCanvas);\n  });\n}\n\nfunction prepareGravatarFromCoinbase(state, userCopy, payload = null) {\n  const colorPosition = Math.abs(\n    getHash(state.web3.coinbase) % IDENTICON_COLORS.length\n  );\n  const identiconColor = IDENTICON_COLORS[colorPosition];\n  const avatarCanvas = ethereumBlockies.create({\n    seed: state.web3.coinbase,\n    color: identiconColor.color,\n    bgcolor: identiconColor.bgColor,\n    size: 8,\n    scale: 13,\n    spotcolor: identiconColor.spotColor\n  });\n  assignPropertyTo(userCopy, \"avatarCanvas\", avatarCanvas);\n  state.user = userCopy;\n  if (payload.callback) payload.callback(avatarCanvas);\n}\n\nexport default {\n  [MUTATION_TYPES.REGISTER_WEB3_INSTANCE](state, payload) {\n    const result = payload.result;\n\n    const web3Copy = state.web3;\n    web3Copy.instance = () => result.web3;\n    web3Copy.address = result.address\n      ? result.address.toString()\n      : web3Copy.address;\n    web3Copy.coinbase = result.coinbase\n      ? result.coinbase.toString()\n      : web3Copy.coinbase;\n    web3Copy.networkId = result.networkId\n      ? result.networkId.toString()\n      : web3Copy.networkId;\n    web3Copy.error = result.web3Error ? result.web3Error : web3Copy.error;\n    web3Copy.isInjected = result.hasInjectedWeb3\n      ? result.hasInjectedWeb3\n      : web3Copy.isInjected;\n\n    state.web3 = web3Copy;\n\n    if (payload.callback) payload.callback(state);\n  },\n  [MUTATION_TYPES.UPDATE_USER_BLOCKCHAIN_STATUS](state, payload) {\n    const hasWeb3InjectedBrowser = state.web3.isInjected;\n    const hasCoinbase = !!(state.web3.coinbase && state.web3.coinbase !== \"\");\n    const coinbase = state.web3.coinbase;\n    const approvedNetworkId = APPROVED_NETWORK_ID || state.web3.networkId;\n    const isConnectedToApprovedNetwork = !!(\n      state.web3.networkId &&\n      state.web3.networkId !== \"\" &&\n      state.web3.networkId === approvedNetworkId\n    );\n    const web3Status = {\n      hasWeb3InjectedBrowser,\n      hasCoinbase,\n      isConnectedToApprovedNetwork,\n      coinbase\n    };\n\n    let warningMessage = null;\n    if (hasWeb3InjectedBrowser) {\n      if (hasCoinbase) {\n        if (!isConnectedToApprovedNetwork) {\n          warningMessage = `You're not on the same Blockchain as us. Please connect to the ${NETWORKS[approvedNetworkId]}`;\n        }\n      } else {\n        warningMessage =\n          \"Looks like you haven't logged into your Web3 injector. If you're using Metamask and you'd signed up, please log into Metamask, else click on the 'Sign Up' link above to begin.\";\n      }\n    } else {\n      warningMessage = \"Your browser is not Web3-enabled.\";\n    }\n\n    if (hasWeb3InjectedBrowser && hasCoinbase && isConnectedToApprovedNetwork) {\n      const userCopy = state.user;\n      Object.assign(userCopy, web3Status);\n      state.user = userCopy;\n    } else {\n      resetUser(state, web3Status);\n    }\n\n    if (payload.callback)\n      payload.callback({ status: !warningMessage, warningMessage });\n  },\n  [MUTATION_TYPES.UPDATE_WEB3_PROPERTIES](state, payload) {\n    for (var i = payload.properties.length - 1; i >= 0; i--) {\n      state.web3[payload.properties[i]] = payload.values[i];\n      if (state.user[payload.properties[i]])\n        state.user[payload.properties[i]] = payload.values[i];\n    }\n  },\n  [MUTATION_TYPES.SET_CURRENT_VIEW](state, newRoute) {\n    state.currentView = newRoute.meta.view;\n  },\n  [MUTATION_TYPES.UPDATE_USER_GRAVATAR](state, payload) {\n    const userCopy = state.user;\n    updateUserGravatar(state, userCopy, payload);\n  },\n  [MUTATION_TYPES.UPDATE_DAPP_READINESS](state, isReady) {\n    state.isDAppReady = isReady;\n  },\n  [MUTATION_TYPES.INITIALISE_IS_VALID_USER_BUT](state, payload) {\n    state.isValidUserBut = payload.value ? \"1\" : \"0\";\n    state.originalIsValidUserBut = payload.value ? \"1\" : \"0\";\n    const userCopy = state.user;\n    userCopy.warningMessage = payload.value ? payload.value : \"\";\n    state.user = userCopy;\n    if (payload.callback) payload.callback();\n  },\n  [MUTATION_TYPES.SET_IS_VALID_USER_BUT](state, newValue) {\n    state.isValidUserBut = newValue;\n  },\n  [MUTATION_TYPES.RESET_IS_VALID_USER_BUT](state) {\n    state.isValidUserBut = state.originalIsValidUserBut;\n  },\n  [MUTATION_TYPES.LOGIN](state, payload) {\n    const userObject = payload.userObject;\n    const userCopy = state.user;\n\n    Object.assign(userCopy, userObject, {\n      isValid: true,\n      firstName: userObject.firstName || \"\",\n      lastName: userObject.lastName || \"\",\n      email: userObject.email || \"\",\n      gravatar: userObject.gravatar || \"\",\n      isLoggedIn:\n        !!(userObject.email && userObject.email !== \"\") &&\n        state.user.hasCoinbase &&\n        state.user.isConnectedToApprovedNetwork\n    });\n\n    getUserBalance(state).then(balance => {\n      userCopy.balance = balance;\n      state.user = userCopy;\n      if (payload.callback) payload.callback(true);\n    });\n  },\n  [MUTATION_TYPES.LOGOUT](state, payload) {\n    const hasWeb3InjectedBrowser = state.web3.isInjected;\n    const hasCoinbase = !!(state.web3.coinbase && state.web3.coinbase !== \"\");\n    const coinbase = state.web3.coinbase;\n    const approvedNetworkId = APPROVED_NETWORK_ID || state.web3.networkId;\n    const isConnectedToApprovedNetwork = !!(\n      state.web3.networkId &&\n      state.web3.networkId !== \"\" &&\n      state.web3.networkId === approvedNetworkId\n    );\n    const web3Status = {\n      hasWeb3InjectedBrowser,\n      hasCoinbase,\n      isConnectedToApprovedNetwork,\n      coinbase\n    };\n\n    resetUser(state, web3Status);\n    if (payload.callback) payload.callback();\n  },\n  [MUTATION_TYPES.CHANGE_CURRENT_ROUTE_TO](state, newRoute) {\n    state.currentRoute = newRoute;\n  }\n};\n"]}]}