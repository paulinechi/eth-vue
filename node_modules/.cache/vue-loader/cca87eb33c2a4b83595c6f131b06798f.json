{"remainingRequest":"/home/ubuntu/eth-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/eth-vue/src/components/sections/Web3Message.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu/eth-vue/src/components/sections/Web3Message.vue","mtime":1640695749883},{"path":"/home/ubuntu/eth-vue/node_modules/babel-loader/lib/index.js","mtime":1640788501629},{"path":"/home/ubuntu/eth-vue/node_modules/cache-loader/dist/cjs.js","mtime":1640501305467},{"path":"/home/ubuntu/eth-vue/node_modules/vue-loader/lib/index.js","mtime":1640788505663}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiV2ViM01lc3NhZ2UiLAogIGRhdGE6IGZ1bmN0aW9uKCkgewogICAgcmV0dXJuIHsKICAgICAgdXNlcjogdGhpcy4kc3RvcmUuc3RhdGUudXNlcgogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBjb2luYmFzZSgpIHsKICAgICAgcmV0dXJuIHRoaXMudXNlci5jb2luYmFzZTsKICAgIH0sCiAgICBhcHByb3ZlZE5ldHdvcmtOYW1lKCkgewogICAgICBjb25zdCBuZXR3b3JrSWQgPSB0aGlzLiRzdG9yZS5zdGF0ZS53ZWIzLm5ldHdvcmtJZDsKICAgICAgY29uc3QgYXBwcm92ZWROZXR3b3JrSWQgPSBBUFBST1ZFRF9ORVRXT1JLX0lEIHx8IG5ldHdvcmtJZDsKICAgICAgcmV0dXJuIE5FVFdPUktTW2FwcHJvdmVkTmV0d29ya0lkXTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGdvVG9NZXRhbWFzaygpIHsKICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAiaHR0cHM6Ly9tZXRhbWFzay5pby8iOwogICAgfQogIH0KfTsKCmltcG9ydCB7IEFQUFJPVkVEX05FVFdPUktfSUQsIE5FVFdPUktTIH0gZnJvbSAiLi4vLi4vdXRpbC9jb25zdGFudHMiOwo="},{"version":3,"sources":["Web3Message.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"Web3Message.vue","sourceRoot":"src/components/sections","sourcesContent":["<template>\n  <div id=\"web3-message\" style=\"display: none;\">\n    <div class=\"content\">\n      <div class=\"message\">\n        <div v-if=\"user.hasWeb3InjectedBrowser\">\n          Your browser is Web3-injected.\n          <br />\n          <div v-if=\"user.isConnectedToApprovedNetwork\">\n            You are also connected to the {{ approvedNetworkName }} on the\n            blockchain.\n            <br />\n            <div v-if=\"user.hasCoinbase\">\n              <span v-if=\"user.isLoggedIn\"> Welcome {{ user.firstName }} </span>\n              <span v-else>\n                And we can see your ethereum address [{{ coinbase }}].<br />\n                You're all set to use the dApp. If you're not signed up, click\n                the \"Sign Up\" link above to begin, or click the LOGIN button\n                above to login.\n              </span>\n            </div>\n            <div v-else>\n              But it seems you don't have an account with us on the\n              blockchain.<br />Or you do but the account is currently\n              inaccessible.<br />Create an account on the blockchain and sign up\n              to begin, or make your existing account accessible.\n            </div>\n          </div>\n          <div v-else>\n            But you are not connected to our network on the blockchain [{{\n              approvedNetworkName\n            }}].<br />\n            Connect to the {{ approvedNetworkName }}.\n          </div>\n        </div>\n        <div v-else>\n          {{ user.warningMessage }} To use the eth-vue dApp, you can begin by\n          installing a Web3 injector like\n          <a href=\"https://metamask.io/\">Metamask</a>.\n          <div class=\"metamask-resource\" @click=\"goToMetamask\" />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Web3Message\",\n  data: function() {\n    return {\n      user: this.$store.state.user\n    };\n  },\n  computed: {\n    coinbase() {\n      return this.user.coinbase;\n    },\n    approvedNetworkName() {\n      const networkId = this.$store.state.web3.networkId;\n      const approvedNetworkId = APPROVED_NETWORK_ID || networkId;\n      return NETWORKS[approvedNetworkId];\n    }\n  },\n  methods: {\n    goToMetamask() {\n      window.location.href = \"https://metamask.io/\";\n    }\n  }\n};\n\nimport { APPROVED_NETWORK_ID, NETWORKS } from \"../../util/constants\";\n</script>\n\n<style scoped>\n#web3-message {\n  width: 100%;\n  height: 420px;\n}\n\n.blockchain-message {\n  float: left;\n  margin-top: 20px;\n  font-size: 14px;\n  border: 1px solid #dcdede;\n  color: #4d4c49;\n  width: auto;\n  padding: 10px;\n}\n\n.content {\n  height: 100%;\n  text-align: center;\n  max-width: 920px;\n  margin: auto;\n  padding: 160px;\n}\n\n.message {\n  height: 80px;\n  line-height: 40px;\n}\n\n.metamask-resource {\n  background: url(\"/static/images/metamask.png\") no-repeat;\n  background-size: contain;\n  height: 200px;\n  width: auto;\n  cursor: pointer;\n}\n</style>\n"]}]}