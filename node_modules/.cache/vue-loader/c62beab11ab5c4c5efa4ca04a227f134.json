{"remainingRequest":"/home/ubuntu/eth-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/eth-vue/src/components/sections/ProfileForm.vue?vue&type=style&index=0&id=723725c8&scoped=true&lang=css&","dependencies":[{"path":"/home/ubuntu/eth-vue/src/components/sections/ProfileForm.vue","mtime":1640695749883},{"path":"/home/ubuntu/eth-vue/node_modules/css-loader/dist/cjs.js","mtime":1640501313317},{"path":"/home/ubuntu/eth-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1640788505663},{"path":"/home/ubuntu/eth-vue/node_modules/postcss-loader/src/index.js","mtime":1640077159126},{"path":"/home/ubuntu/eth-vue/node_modules/cache-loader/dist/cjs.js","mtime":1640501305467},{"path":"/home/ubuntu/eth-vue/node_modules/vue-loader/lib/index.js","mtime":1640788505663}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI3Byb2ZpbGUtZm9ybSB7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiA0MjBweDsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgdG9wOiAxMDBweDsKfQoKaDMgewogIHdpZHRoOiAxMDBweDsKICBtYXJnaW46IGF1dG87CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKLndyYXBwZXIgewogIHdpZHRoOiA0NjBweDsKICBtYXJnaW46IGF1dG87Cn0KCi5jb2x1bW4gewogIHdpZHRoOiAzMDBweDsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7Cn0KCi5yb3cgewogIG1hcmdpbi10b3A6IDIwcHg7CiAgZm9udC1zaXplOiAxNHB4OwogIHdpZHRoOiAzMDBweDsKICBoZWlnaHQ6IDQwcHg7CiAgZGlzcGxheTogYmxvY2s7Cn0KCi5hdmF0YXIgewogIGhlaWdodDogMTA0cHg7CiAgd2lkdGg6IDEwNHB4OwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKfQoKLmF2YXRhci1jb2x1bW4gewogIGhlaWdodDogMTA2cHg7CiAgd2lkdGg6IDEwNnB4OwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiA2MHB4OwogIG1hcmdpbi1sZWZ0OiAyMHB4OwogIGJvcmRlcjogMXB4IHNvbGlkICNkY2RlZGU7CiAgYm9yZGVyLXJhZGl1czogMTA2cHg7Cn0KCmxhYmVsIHsKICBoZWlnaHQ6IDEwMCU7CiAgbGluZS1oZWlnaHQ6IDQwcHg7CiAgd2lkdGg6IDEwMHB4OwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKfQoKLndhcm5pbmctbGFiZWwgewogIGRpc3BsYXk6IG5vbmU7CiAgd2lkdGg6IDE0MHB4OwogIGhlaWdodDogMjBweDsKICBsaW5lLWhlaWdodDogMjBweDsKICBjb2xvcjogI2JhMzMzMzsKfQoKaW5wdXRbdHlwZT0idGV4dCJdIHsKICBoZWlnaHQ6IDMwcHg7CiAgbGluZS1oZWlnaHQ6IDMwcHg7CiAgd2lkdGg6IDIwMHB4OwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBjb2xvcjogIzRkNGM0OTsKICBvdXRsaW5lOiBub25lOwp9CgppbnB1dCB7CiAgaGVpZ2h0OiAzMHB4OwogIGxpbmUtaGVpZ2h0OiAzMHB4OwogIHdpZHRoOiAxMDBweDsKICBmbG9hdDogcmlnaHQ7Cn0K"},{"version":3,"sources":["ProfileForm.vue"],"names":[],"mappingsfile":"ProfileForm.vue","sourceRoot":"src/components/sections","sourcesContent":["<template>\n  <div v-if=\"isAfterMount\" id=\"profile-form\">\n    <h3>{{ route.path === \"/sign-up\" ? \"Sign Up\" : \"Edit Profile\" }}</h3>\n    <div class=\"wrapper\">\n      <div class=\"column\">\n        <div class=\"row\">\n          <label for=\"first-name\">First name</label>\n          <input\n            id=\"first-name\"\n            v-model=\"user.firstName\"\n            type=\"text\"\n            name=\"first-name\"\n          />\n        </div>\n\n        <div class=\"row\">\n          <label for=\"last-name\">Last name</label>\n          <input\n            id=\"Last-name\"\n            v-model=\"user.lastName\"\n            type=\"text\"\n            name=\"Last-name\"\n          />\n        </div>\n\n        <div class=\"row\">\n          <label for=\"email\">Email</label>\n          <input\n            id=\"email\"\n            v-model=\"user.email\"\n            type=\"text\"\n            name=\"email\"\n            @input=\"setAvatar\"\n          />\n        </div>\n\n        <div class=\"row\">\n          <label class=\"warning-label\">Please fill all fields.</label>\n          <input\n            type=\"button\"\n            value=\"Submit\"\n            @click=\"submitProfileToTheBlockchain\"\n          />\n        </div>\n      </div>\n\n      <div class=\"avatar-column\">\n        <div class=\"avatar\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"ProfileForm\",\n  data: function() {\n    return {\n      user: this.$store.state.user,\n      isAfterMount: false,\n      route: this.$route\n    };\n  },\n  computed: {\n    isDAppReady: function() {\n      return this.$store.state.isDAppReady;\n    }\n  },\n  watch: {\n    isDAppReady: function(value) {\n      console.log(\"ProfileForm:::isDAppReady: \", value);\n      this.$nextTick(() => {\n        this.loadProfileFormOrPage();\n      });\n    },\n    isAfterMount: function(value) {\n      console.log(\"ProfileForm:::isAfterMount: \", value);\n      this.$nextTick(() => {\n        this.setAvatar();\n      });\n    }\n  },\n  mounted: function() {\n    this.$nextTick(() => {\n      this.loadProfileFormOrPage();\n    });\n  },\n  methods: {\n    ...mapActions([ACTION_TYPES.LOGIN]),\n    setAvatar(evt = null) {\n      const email =\n        evt && evt.target && evt.target.value !== undefined\n          ? evt.target.value.trim()\n          : this.user.email.trim();\n      this.$root.callUpdateUserGravatar({\n        email: email,\n        callback: avatarCanvas => {\n          this.styleAndAddAvatarCanvasToPage(avatarCanvas);\n        }\n      });\n    },\n    styleAvatarCanvas(avatarCanvas) {\n      if (avatarCanvas && avatarCanvas.style) {\n        avatarCanvas.style.borderRadius = \"104px\";\n      }\n    },\n    addAvatarCanvasToPage(avatarCanvas) {\n      const avatarContainer = document.querySelector(\".avatar\");\n      if (avatarContainer && avatarCanvas && avatarCanvas.style) {\n        const formerCanvas = avatarContainer.querySelector(\"canvas\");\n        if (formerCanvas) {\n          avatarContainer.replaceChild(avatarCanvas, formerCanvas);\n        } else {\n          avatarContainer.appendChild(avatarCanvas);\n        }\n      }\n    },\n    styleAndAddAvatarCanvasToPage(avatarCanvas) {\n      this.styleAvatarCanvas(avatarCanvas);\n      this.addAvatarCanvasToPage(avatarCanvas);\n    },\n    submitProfileToTheBlockchain(evt) {\n      if (\n        this.user.firstName.trim() === \"\" ||\n        this.user.lastName.trim() === \"\" ||\n        this.user.email.trim() === \"\"\n      ) {\n        document.querySelector(\".warning-label\").style.display = \"inline-block\";\n      } else {\n        document.querySelector(\".warning-label\").style.display = \"none\";\n        evt.target.disabled = true;\n        const action =\n          this.$route.path === \"/sign-up\" ? \"signup\" : \"editProfile\";\n        const userObject = {\n          firstName: `b${this.user.firstName || \"\"}`,\n          lastName: `b${this.user.lastName || \"\"}`,\n          email: `b${this.user.email || \"\"}`,\n          gravatar: `${getHexFromString(\n            this.$store.state,\n            this.user.gravatar || \"\"\n          )}`\n        };\n\n        const vueUserObject = Object.assign({}, userObject, {\n          firstName: this.user.firstName || \"\",\n          lastName: this.user.lastName || \"\",\n          email: this.user.email || \"\",\n          gravatar: this.user.gravatar || \"\"\n        });\n\n        this.$root.callToWriteUser({\n          vueObject: vueUserObject,\n          requestParams: userObject,\n          contractIndexToUse: \"UserAuthManager\",\n          methodName: \"setUser\",\n          managerIndex: \"UserManager\",\n          callback: isSuccess => {\n            evt.target.disabled = false;\n            alert(\n              action === \"signup\"\n                ? isSuccess\n                  ? \"Signed up and logged In\"\n                  : \"Unable to sign up at this time\"\n                : \"Successfully updated profile\"\n            );\n            if (this.user.email === \"\" || !this.user.isLoggedIn) {\n              this.$router.push(\"/\");\n            } else {\n              this.$router.push(\"/dashboard\");\n            }\n          }\n        });\n      }\n    },\n    loadProfileFormOrPage() {\n      if (this.$store.state.currentRoute.name === \"ProfileEdit\") {\n        this.isAfterMount = true;\n        this.setAvatar();\n      } else {\n        this.$root.callToAccessBlockchain({\n          requestParams: {},\n          contractIndexToUse: \"UserAuthManager\",\n          methodName: \"login\",\n          managerIndex: \"UserManager\",\n          callback: (isUserExists = false) => {\n            if (isUserExists) {\n              this.$root.logUserIn();\n            } else {\n              this.isAfterMount = true;\n              this.setAvatar();\n            }\n          }\n        });\n      }\n    }\n  }\n};\n\nimport { mapActions } from \"vuex\";\nimport { ACTION_TYPES } from \"../../util/constants\";\nimport { getHexFromString } from \"../../js/utilities\";\n</script>\n\n<style scoped>\n#profile-form {\n  width: 100%;\n  height: 420px;\n  position: relative;\n  top: 100px;\n}\n\nh3 {\n  width: 100px;\n  margin: auto;\n  margin-bottom: 20px;\n}\n\n.wrapper {\n  width: 460px;\n  margin: auto;\n}\n\n.column {\n  width: 300px;\n  display: inline-block;\n}\n\n.row {\n  margin-top: 20px;\n  font-size: 14px;\n  width: 300px;\n  height: 40px;\n  display: block;\n}\n\n.avatar {\n  height: 104px;\n  width: 104px;\n  position: absolute;\n}\n\n.avatar-column {\n  height: 106px;\n  width: 106px;\n  display: inline-block;\n  position: absolute;\n  top: 60px;\n  margin-left: 20px;\n  border: 1px solid #dcdede;\n  border-radius: 106px;\n}\n\nlabel {\n  height: 100%;\n  line-height: 40px;\n  width: 100px;\n  display: inline-block;\n}\n\n.warning-label {\n  display: none;\n  width: 140px;\n  height: 20px;\n  line-height: 20px;\n  color: #ba3333;\n}\n\ninput[type=\"text\"] {\n  height: 30px;\n  line-height: 30px;\n  width: 200px;\n  display: inline-block;\n  color: #4d4c49;\n  outline: none;\n}\n\ninput {\n  height: 30px;\n  line-height: 30px;\n  width: 100px;\n  float: right;\n}\n</style>\n"]}]}